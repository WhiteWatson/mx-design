"use strict";(self.webpackChunk_mx_design_example=self.webpackChunk_mx_design_example||[]).push([[515],{6515:(e,l,t)=>{t.r(l),t.d(l,{default:()=>g});var n,d=t(2798),i=t(9641),c=t(7059),y=t(2983),r=t(188),o=t(2307),s=t(9101),m={code:"\nimport { GridLayout, Cell, Button } from '@mx-design/web';\n\nfunction App() {\n  const cellStyle = { background: '#f5f2f0', padding: '4px 0' };\n  return (\n      <GridLayout columns={6}>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={2} middle>2/6</Cell>\n        <Cell style={cellStyle} width={2} middle>2/6</Cell>\n        <Cell style={cellStyle} width={2} middle>2/6</Cell>\n        <Cell style={cellStyle} width={3} middle>1/3</Cell>\n        <Cell style={cellStyle} width={3} middle>1/3</Cell>\n        <Cell style={cellStyle} width={6} middle>1/1</Cell>\n      </GridLayout>\n  )\n}",namespace:s.Bb},C={code:"\nimport { GridLayout, Cell, Button } from '@mx-design/web';\n\nfunction App() {\n  const cellStyle = { background: '#f5f2f0', padding: '4px 0' };\n  return (\n      <GridLayout flow=\"column\" columns={4}>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={2} middle>2/6</Cell>\n        <Cell style={cellStyle} height={2} middle>2/6</Cell>\n        <Cell style={cellStyle} height={2} middle>2/6</Cell>\n        <Cell style={cellStyle} height={3} middle>1/3</Cell>\n        <Cell style={cellStyle} height={3} middle>1/3</Cell>\n        <Cell style={cellStyle} height={6} middle>1/1</Cell>\n      </GridLayout>\n  )\n}",namespace:s.sg},u={code:"\nimport { GridLayout, Cell, Button } from '@mx-design/web';\n\nfunction App() {\n  const cellStyle = { background: '#f5f2f0', padding: '4px 0' };\n  return (\n    <GridLayout columns={3}>\n      <Cell style={cellStyle} middle>Top Left</Cell>\n      <Cell left={3} style={cellStyle} middle>Top Right</Cell>\n      <Cell left={2} top={2} style={cellStyle} middle>Middle</Cell>\n      <Cell top={3} style={cellStyle} middle>Bottom Left</Cell>\n      <Cell top={3} left={3} style={cellStyle} middle>Bottom Right</Cell>\n    </GridLayout>\n  )\n}",namespace:s.Ly},a={code:"\nimport { GridLayout, Cell, Button } from '@mx-design/web';\n\nfunction App() {\n  const cellStyle = { background: '#f5f2f0', padding: '4px 0' };\n  return (\n    <GridLayout flow=\"row dense\" columns={4}>\n      <Cell width={2} height={1} style={cellStyle} middle>\n        A 200x100\n      </Cell>\n      <Cell width={1} height={2} style={cellStyle} middle>\n        B 100x200\n      </Cell>\n      <Cell width={2} height={1} style={cellStyle} middle>\n        C 200x100\n      </Cell>\n      <Cell style={cellStyle} middle>\n        D 100x100\n      </Cell>\n      <Cell style={cellStyle} middle>\n        E 100x100\n      </Cell>\n    </GridLayout>\n  )\n}",namespace:s.mb},p=(n={},(0,i.Z)(n,m.namespace,m),(0,i.Z)(n,C.namespace,C),(0,i.Z)(n,u.namespace,u),(0,i.Z)(n,a.namespace,a),n),h=t(7181);function f(e,l){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);l&&(n=n.filter((function(l){return Object.getOwnPropertyDescriptor(e,l).enumerable}))),t.push.apply(t,n)}return t}function S(e){for(var l=1;l<arguments.length;l++){var t=null!=arguments[l]?arguments[l]:{};l%2?f(Object(t),!0).forEach((function(l){(0,i.Z)(e,l,t[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):f(Object(t)).forEach((function(l){Object.defineProperty(e,l,Object.getOwnPropertyDescriptor(t,l))}))}return e}const g=function(){var e=(0,o.b)({namespace:s.sW}),l=(0,c.Z)(e,1)[0],t=(0,y.useMemo)((function(){return Object.keys(l).map((function(e){return S(S({key:e},l[e]),p[e])}))}),[l]),n=(0,y.useMemo)((function(){return t.map((function(e){return{title:e.title,href:"#".concat(e.key)}}))}),[t]);return y.createElement(r.Z,{titleList:n},t.map((function(e,l){return y.createElement(h.AN,(0,d.Z)({key:l},e))})))}}}]);