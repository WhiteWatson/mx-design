"use strict";(self.webpackChunk_mx_design_example=self.webpackChunk_mx_design_example||[]).push([[515],{6515:(l,e,t)=>{t.r(e),t.d(e,{default:()=>S});var n,d=t(9641),i=t(7059),c=t(2983),y=t(6781),r=t(2307),o=t(9101),s={code:"\nimport { GridLayout, Cell, Button } from '@mx-design/web';\n\nfunction App() {\n  const cellStyle = { background: '#f5f2f0', padding: '4px 0' };\n  return (\n      <GridLayout columns={6}>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\n        <Cell style={cellStyle} width={2} middle>2/6</Cell>\n        <Cell style={cellStyle} width={2} middle>2/6</Cell>\n        <Cell style={cellStyle} width={2} middle>2/6</Cell>\n        <Cell style={cellStyle} width={3} middle>1/3</Cell>\n        <Cell style={cellStyle} width={3} middle>1/3</Cell>\n        <Cell style={cellStyle} width={6} middle>1/1</Cell>\n      </GridLayout>\n  )\n}",namespace:o.Bb},m={code:"\nimport { GridLayout, Cell, Button } from '@mx-design/web';\n\nfunction App() {\n  const cellStyle = { background: '#f5f2f0', padding: '4px 0' };\n  return (\n      <GridLayout flow=\"column\" columns={4}>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\n        <Cell style={cellStyle} height={2} middle>2/6</Cell>\n        <Cell style={cellStyle} height={2} middle>2/6</Cell>\n        <Cell style={cellStyle} height={2} middle>2/6</Cell>\n        <Cell style={cellStyle} height={3} middle>1/3</Cell>\n        <Cell style={cellStyle} height={3} middle>1/3</Cell>\n        <Cell style={cellStyle} height={6} middle>1/1</Cell>\n      </GridLayout>\n  )\n}",namespace:o.sg},C={code:"\nimport { GridLayout, Cell, Button } from '@mx-design/web';\n\nfunction App() {\n  const cellStyle = { background: '#f5f2f0', padding: '4px 0' };\n  return (\n    <GridLayout columns={3}>\n      <Cell style={cellStyle} middle>Top Left</Cell>\n      <Cell left={3} style={cellStyle} middle>Top Right</Cell>\n      <Cell left={2} top={2} style={cellStyle} middle>Middle</Cell>\n      <Cell top={3} style={cellStyle} middle>Bottom Left</Cell>\n      <Cell top={3} left={3} style={cellStyle} middle>Bottom Right</Cell>\n    </GridLayout>\n  )\n}",namespace:o.Ly},u={code:"\nimport { GridLayout, Cell, Button } from '@mx-design/web';\n\nfunction App() {\n  const cellStyle = { background: '#f5f2f0', padding: '4px 0' };\n  return (\n    <GridLayout flow=\"row dense\" columns={4}>\n      <Cell width={2} height={1} style={cellStyle} middle>\n        A 200x100\n      </Cell>\n      <Cell width={1} height={2} style={cellStyle} middle>\n        B 100x200\n      </Cell>\n      <Cell width={2} height={1} style={cellStyle} middle>\n        C 200x100\n      </Cell>\n      <Cell style={cellStyle} middle>\n        D 100x100\n      </Cell>\n      <Cell style={cellStyle} middle>\n        E 100x100\n      </Cell>\n    </GridLayout>\n  )\n}",namespace:o.mb},a=(n={},(0,d.Z)(n,s.namespace,s),(0,d.Z)(n,m.namespace,m),(0,d.Z)(n,C.namespace,C),(0,d.Z)(n,u.namespace,u),n),p=t(2896);function h(l,e){var t=Object.keys(l);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(l);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(l,e).enumerable}))),t.push.apply(t,n)}return t}function f(l){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?h(Object(t),!0).forEach((function(e){(0,d.Z)(l,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(l,Object.getOwnPropertyDescriptors(t)):h(Object(t)).forEach((function(e){Object.defineProperty(l,e,Object.getOwnPropertyDescriptor(t,e))}))}return l}const S=function(){var l=(0,r.b)({namespace:o.sW}),e=(0,i.Z)(l,1)[0],t=(0,c.useMemo)((function(){return Object.keys(e).map((function(l){return f(f({key:l},e[l]),a[l])}))}),[e,a]),n=(0,c.useMemo)((function(){return t.map((function(l){return{title:l.title,href:"#".concat(l.key)}}))}),[t]);return c.createElement(y.Z,{titleList:n},t.map((function(l){return c.createElement(p.AN,l)})))}}}]);